@using Microsoft.AspNetCore.Components

<MudStack Row=true>
    <MudButton Variant="Variant.Outlined" Color="Color.Primary" hidden=@(IsCreateButtonHidden) 
        OnClick=@(() => ButtonClicked("Create")) StartIcon="@Icons.Material.Outlined.AddBox">Create</MudButton>

    <MudButton Variant="Variant.Outlined" Color="Color.Primary" hidden=@(IsRecoverButtonHidden) 
        OnClick=@(() => ButtonClicked("Recover")) StartIcon="@Icons.Material.Outlined.RestoreFromTrash">Recover</MudButton>

    <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled=@(IsDeleteButtonDisabled) 
        OnClick=@(() => ButtonClicked("Delete")) StartIcon="@Icons.Material.Outlined.Delete">Delete</MudButton>

    <MudButton Variant="Variant.Outlined" Color="Color.Primary" 
        OnClick="@(() => ButtonClicked("Refresh"))" StartIcon="@Icons.Material.Outlined.Refresh">Refresh</MudButton>
</MudStack>

@code {

    [Parameter] public EventCallback<string> ButtonClickedEvent { get; set; }
    public string? SearchString { get; set; }
    public bool IsRecoverButtonHidden { get; set; } = true;
    public bool IsCreateButtonHidden { get; set; } = false;
    public bool IsDeleteButtonDisabled { get; set; } = true;

    public void ButtonClicked(string buttonName)
    {
        ButtonClickedEvent.InvokeAsync(buttonName);
    }

    public void DefaultView()
    {
        IsRecoverButtonHidden = true;
        IsCreateButtonHidden = false;

    }

    public void RecoveryVaultView()
    {
        IsCreateButtonHidden = true;
        IsRecoverButtonHidden = false;
    }

    public void DisableDeleteButton() => IsDeleteButtonDisabled = true;
    public void EnableDeleteButton() => IsDeleteButtonDisabled = false;

}
